pipeline {
    agent any
    stages {
        stage('Terraform Init') {
            steps {
                sh """
                    ~/bin/rocket_hook.sh T '${env.JOB_NAME} - Terraform Init - STARTED'
                    terraform init
                """
                success {
                    sh "~/bin/rocket_hook.sh TS '${env.JOB_NAME} - Terraform Init - DONE'"
                }
                failure {
                    sh "~/bin/rocket_hook.sh TF '${env.JOB_NAME} - Terraform Init - FAILED'"
                }
            }
        }
        stage('Terraform Apply') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'vault_terraform_login',
                    passwordVariable: 'SECRET_ID',
                    usernameVariable: 'ROLE_ID'
                )]) {
                    sh """
                        ~/bin/rocket_hook.sh T "${env.JOB_NAME} - Terraform Apply - STARTED"
                        export VAULT_CAPATH
                        export VAULT_ADDR
                        . ./vault_consul_setup.bash
                        terraform apply -auto-approve
                    """
                }
                success {
                    sh "~/bin/rocket_hook.sh TS '${env.JOB_NAME} - Terraform Apply - DONE'"
                }
                failure {
                    sh "~/bin/rocket_hook.sh TF '${env.JOB_NAME} - Terraform Apply - FAILED'"
                }
            }
        }
        stage ('Ansible - Run Playbooks') {
            steps {
                build job: 'vs_ansible', parameters: []
            }
        }
    }
    post {
        always {
            cleanWs()
        }
        success {
            sh "~/bin/rocket_hook.sh JS '${env.JOB_NAME} - DONE'"
        }
        failure {
            sh "~/bin/rocket_hook.sh JF '${env.JOB_NAME} - FAILED'"
        }
    }
}
